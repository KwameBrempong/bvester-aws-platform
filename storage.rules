rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user has admin role
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Helper function to validate file size (10MB limit)
    function isValidSize() {
      return resource.size < 10 * 1024 * 1024;
    }
    
    // Helper function to validate image files
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') && 
             request.resource.contentType in ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];
    }
    
    // Helper function to validate document files
    function isValidDocument() {
      return request.resource.contentType in [
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/vnd.ms-excel',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        'text/plain',
        'text/csv'
      ];
    }
    
    // User profile images and documents
    match /users/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
        (isValidImage() || isValidDocument()) && 
        isValidSize();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // User avatar images - publicly readable
    match /users/{userId}/avatar/{fileName} {
      allow read: if true; // Public read for avatars
      allow write: if isOwner(userId) && 
        isValidImage() && 
        resource.size < 2 * 1024 * 1024; // 2MB limit for avatars
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Business profile images and documents
    match /businesses/{businessId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidDocument()) && 
        isValidSize();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Business logos - publicly readable
    match /businesses/{businessId}/logo/{fileName} {
      allow read: if true; // Public read for business logos
      allow write: if isAuthenticated() && 
        isValidImage() && 
        resource.size < 2 * 1024 * 1024; // 2MB limit for logos
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Business gallery images - publicly readable
    match /businesses/{businessId}/gallery/{fileName} {
      allow read: if true; // Public read for business galleries
      allow write: if isAuthenticated() && 
        isValidImage() && 
        resource.size < 5 * 1024 * 1024; // 5MB limit for gallery images
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Business documents (private)
    match /businesses/{businessId}/documents/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        isValidDocument() && 
        isValidSize();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // KYC documents - highly restricted
    match /kyc/{userId}/{fileName} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) && 
        (isValidImage() || isValidDocument()) && 
        isValidSize();
      allow delete: if isAdmin(); // Only admins can delete KYC documents
    }
    
    // CMS content uploads - admin only write, public read for published
    match /cms/{contentId}/{fileName} {
      allow read: if true; // Public read for CMS content
      allow write: if isAdmin() && 
        (isValidImage() || isValidDocument()) && 
        resource.size < 50 * 1024 * 1024; // 50MB limit for CMS content
      allow delete: if isAdmin();
    }
    
    // CMS images - optimized for web
    match /cms/images/{fileName} {
      allow read: if true; // Public read for CMS images
      allow write: if isAdmin() && 
        isValidImage() && 
        resource.size < 10 * 1024 * 1024; // 10MB limit for images
      allow delete: if isAdmin();
    }
    
    // CMS documents - business tools and resources
    match /cms/documents/{fileName} {
      allow read: if true; // Public read for CMS documents
      allow write: if isAdmin() && 
        isValidDocument() && 
        resource.size < 50 * 1024 * 1024; // 50MB limit for documents
      allow delete: if isAdmin();
    }
    
    // Investment documents - restricted access
    match /investments/{investmentId}/{fileName} {
      allow read: if isAuthenticated(); // Only authenticated users
      allow write: if isAuthenticated() && 
        isValidDocument() && 
        isValidSize();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Transaction receipts and proofs
    match /transactions/{transactionId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidDocument()) && 
        resource.size < 5 * 1024 * 1024; // 5MB limit for receipts
      allow delete: if isOwner(resource.metadata.userId) || isAdmin();
    }
    
    // Support ticket attachments
    match /support/{ticketId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidDocument()) && 
        resource.size < 20 * 1024 * 1024; // 20MB limit for support files
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Temporary uploads - short-lived storage
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && 
        (isValidImage() || isValidDocument()) && 
        isValidSize();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Export files - user generated reports
    match /exports/{userId}/{fileName} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) && 
        request.resource.contentType in ['text/csv', 'application/pdf', 'application/vnd.ms-excel'] && 
        isValidSize();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Backup files - admin only
    match /backups/{fileName} {
      allow read, write, delete: if isAdmin();
    }
    
    // System generated files - admin only
    match /system/{fileName} {
      allow read: if isAdmin();
      allow write, delete: if isAdmin();
    }
    
    // Analytics and reports - admin access
    match /analytics/{fileName} {
      allow read: if isAdmin();
      allow write, delete: if isAdmin();
    }
    
    // Logs and audit files - admin only
    match /logs/{fileName} {
      allow read: if isAdmin();
      allow write, delete: if false; // Logs are append-only
    }
    
    // Default deny rule - explicit security
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}